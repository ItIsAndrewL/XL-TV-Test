// This file was generated by running 'ng generate @angular/material:m3-theme'.
// Proceed with caution if making changes to this file.

@use 'sass:map';
@use 'sass:color';
@use 'sass:math';
@use '@angular/material' as mat;

/// Estimate a hue using the given previous and next hues.
@function _estimate-hue($hues, $hue, $prev-hue, $next-hue) {
  $weight: math.div($next-hue - $hue, $next-hue - $prev-hue) * 100%;
  @return color.mix(map.get($hues, $prev-hue), map.get($hues, $next-hue), $weight);
}

$_neutral_hues: (
  0: #000000,
  10: #1B1B1E,
  20: #303033,
  25: #3B3B3E,
  30: #464649,
  35: #525255,
  40: #5E5E61,
  50: #77777A,
  60: #919093,
  70: #ACABAE,
  80: #C7C6C9,
  87: #cbdaff,
  90: #E3E2E5,
  95: #F2F0F3,
  98: #FAF9FC,
  99: #FDFBFF,
  100: #ffffff,
);

// Note: Color palettes are generated from primary: #769CDF, secondary: #8991A2, tertiary: #A288A6, neutral: #919093
$_palettes: (
  primary: (
    0: #000000,
    10: #001b3e,
    20: #002f64,
    25: #003a79,
    30: #00458e,
    35: #19519a,
    40: #2a5ea7,
    50: #4777c2,
    60: #6391de,
    70: #7eacfa,
    80: #aac7ff,
    90: #d6e3ff,
    95: #ecf0ff,
    98: #f9f9ff,
    99: #fdfbff,
    100: #ffffff,
  ),
  secondary: (
    0: #000000,
    10: #001b3c,
    20: #003061,
    25: #003b75,
    30: #004689,
    35: #10529a,
    40: #245fa6,
    50: #4378c1,
    60: #5f92dd,
    70: #7bacfa,
    80: #a8c8ff,
    90: #d5e3ff,
    95: #ecf1ff,
    98: #f9f9ff,
    99: #fdfbff,
    100: #ffffff,
  ),
  tertiary: (
    0: #000000,
    10: #330044,
    20: #4d1660,
    25: #5a236c,
    30: #662f78,
    35: #733b85,
    40: #804792,
    50: #9c60ad,
    60: #b77ac8,
    70: #d494e5,
    80: #efb0ff,
    90: #fad7ff,
    95: #ffebff,
    98: #fff7fb,
    99: #fffbff,
    100: #ffffff,
  ),
  neutral: (
    0: #000000,
    10: #1B1B1E,
    20: #303033,
    25: #3B3B3E,
    30: #464649,
    35: #525255,
    40: #5E5E61,
    50: #77777A,
    60: #919093,
    70: #ACABAE,
    80: #C7C6C9,
    90: #E3E2E5,
    95: #F2F0F3,
    98: #FAF9FC,
    99: #FDFBFF,
    100: #ffffff,
    4: _estimate-hue($_neutral_hues, 4, 0, 10),
    6: _estimate-hue($_neutral_hues, 6, 0, 10),
    12: _estimate-hue($_neutral_hues, 12, 10, 20),
    17: _estimate-hue($_neutral_hues, 17, 10, 20),
    22: _estimate-hue($_neutral_hues, 22, 20, 30),
    24: _estimate-hue($_neutral_hues, 24, 20, 30),
    87: _estimate-hue($_neutral_hues, 87, 80, 90),
    96: _estimate-hue($_neutral_hues, 96, 90, 100),
    92: _estimate-hue($_neutral_hues, 92, 90, 100),
    94: _estimate-hue($_neutral_hues, 94, 90, 100)

  ),
  neutral-variant: (
    0: #000000,
    10: #181c22,
    20: #2d3038,
    25: #383b43,
    30: #44474e,
    35: #4f525a,
    40: #5b5e66,
    50: #74777f,
    60: #8e9099,
    70: #a9abb4,
    80: #c4c6d0,
    90: #e0e2ec,
    95: #eff0fa,
    98: #f9f9ff,
    99: #fdfbff,
    100: #ffffff,
  ),
  error: (
    0: #000000,
    10: #410002,
    20: #690005,
    25: #7e0007,
    30: #93000a,
    35: #a80710,
    40: #ba1a1a,
    50: #de3730,
    60: #ff5449,
    70: #ff897d,
    80: #ffb4ab,
    90: #ffdad6,
    95: #ffedea,
    98: #fff8f7,
    99: #fffbff,
    100: #ffffff,
  ),
);

$_rest: (
  secondary: map.get($_palettes, secondary),
  neutral: map.get($_palettes, neutral),
  neutral-variant: map.get($_palettes,  neutral-variant),
  error: map.get($_palettes, error),
);
$_primary: map.merge(map.get($_palettes, primary), $_rest);
$_tertiary: map.merge(map.get($_palettes, tertiary), $_rest);

$light-theme: mat.define-theme((
  color: (
    theme-type: light,
    primary: $_primary,
    tertiary: $_tertiary,
  ),
));
$dark-theme: mat.define-theme((
  color: (
    theme-type: dark,
    primary: $_primary,
    tertiary: $_tertiary,
  ),
));